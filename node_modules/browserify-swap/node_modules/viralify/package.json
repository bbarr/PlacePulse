{
  "name": "viralify",
  "version": "0.4.2",
  "description": "Injects one or more browserify transforms into all dependencies of a package recursively.",
  "main": "index.js",
  "bin": {
    "viralify": "bin/viralify.js"
  },
  "scripts": {
    "test-main": "tap test/*.js",
    "test-0.8": "nave use 0.8 npm run test-main",
    "test-0.10": "nave use 0.10 npm run test-main",
    "test-all": "npm run test-main && npm run test-0.8 && npm run test-0.10",
    "test": "if [ -e $TRAVIS ]; then npm run test-all; else npm run test-main; fi"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thlorenz/viralify.git"
  },
  "homepage": "https://github.com/thlorenz/viralify",
  "dependencies": {
    "glob": "~3.2.7",
    "runnel": "~0.5.1",
    "minimist": "0.0.5",
    "ansicolors": "~0.3.2"
  },
  "devDependencies": {
    "nave": "~0.4.3",
    "tap": "~0.4.3"
  },
  "keywords": [
    "browserify",
    "browserify-transform",
    "recursive",
    "global",
    "transform",
    "viral",
    "inject"
  ],
  "author": {
    "name": "Thorsten Lorenz",
    "email": "thlorenz@gmx.de",
    "url": "http://thlorenz.com"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/thlorenz/viralify/blob/master/LICENSE"
  },
  "engine": {
    "node": ">=0.6"
  },
  "readme": "# viralify [![build status](https://secure.travis-ci.org/thlorenz/viralify.png)](http://travis-ci.org/thlorenz/viralify)\n\nInjects browserify transforms into specified dependencies of a package recursively.\n\n```sh\nviralify . -t browserify-swap -p ansicolors\n```\n\n```js\nvar viralify = require('viralify');\n\nviralify(root, [ 'foo', 'bar' ], 'browserify-swap', function (err) {\n  if (err) return console.error(err);\n  // package.json's of packages 'foo' and 'bar', found in root and below,\n  // now have 'browserify-swap' added to the end of their 'browserify.transform' field\n})\n```\n\n## Installation\n\n    npm install viralify\n\n## Usage\n\n```\nviralify <path> <options>\n\n  Inject browserify transform(s) into the package.json files of specified packages at and below the given path.\n\nOPTIONS:\n\n  -t, --transform   transform(s) to inject (required)\n  -p, --packages    packages into which to inject the transforms (required)\n  -f, --front       if set, the transform(s) are injected in the front of the transform field so they run first\n\nEXAMPLES:\n\n  Inject 'browserify-swap' transform for all foo dependencies of the package in the current directory\n\n    viralify . -t browserify-swap -p foo\n\n  Inject 'envify' and 'es6ify' transforms in front for all foo and bar dependencies of the package\n  in the current directory\n\n    viralify ./node_modules --transform envify --transform es6ify --front --package foo -p bar\n```\n## API\n\n<!-- START docme generated API please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN docme TO UPDATE -->\n\n<div>\n<div class=\"jsdoc-githubify\">\n<section>\n<article>\n<div class=\"container-overview\">\n<dl class=\"details\">\n</dl>\n</div>\n<dl>\n<dt>\n<h4 class=\"name\" id=\"viralify\"><span class=\"type-signature\"></span>viralify<span class=\"signature\">(root, packages, transform, <span class=\"optional\">front</span>, cb)</span><span class=\"type-signature\"></span></h4>\n</dt>\n<dd>\n<div class=\"description\">\n<p>Injects the given transform(s) into the <code>browserify.transform</code> field of all <code>package.json</code>s\nof the packages below the given <code>root</code> that where specified.</p>\n<p>If the transform(s) were contained in the <code>package.json</code> already, no changes are made and no writes performed.\nThis means that all viralify runs succeeding the first one will be much faster.</p>\n</div>\n<h5>Parameters:</h5>\n<table class=\"params\">\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Argument</th>\n<th class=\"last\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td class=\"name\"><code>root</code></td>\n<td class=\"type\">\n<span class=\"param-type\">String</span>\n</td>\n<td class=\"attributes\">\n</td>\n<td class=\"description last\"><p>of the package</p></td>\n</tr>\n<tr>\n<td class=\"name\"><code>packages</code></td>\n<td class=\"type\">\n<span class=\"param-type\">Array.&lt;String></span>\n</td>\n<td class=\"attributes\">\n</td>\n<td class=\"description last\"><p>one or more packages to which the transforms should be added</p></td>\n</tr>\n<tr>\n<td class=\"name\"><code>transform</code></td>\n<td class=\"type\">\n<span class=\"param-type\">Array.&lt;String></span>\n</td>\n<td class=\"attributes\">\n</td>\n<td class=\"description last\"><p>one or more transforms to be added to the transform field</p></td>\n</tr>\n<tr>\n<td class=\"name\"><code>front</code></td>\n<td class=\"type\">\n<span class=\"param-type\">Boolean</span>\n</td>\n<td class=\"attributes\">\n&lt;optional><br>\n</td>\n<td class=\"description last\"><p>if set transforms are added to the front of the transform field so they run first</p></td>\n</tr>\n<tr>\n<td class=\"name\"><code>cb</code></td>\n<td class=\"type\">\n<span class=\"param-type\">function</span>\n</td>\n<td class=\"attributes\">\n</td>\n<td class=\"description last\"><p>called when the transform injection is complete</p></td>\n</tr>\n</tbody>\n</table>\n<dl class=\"details\">\n<dt class=\"tag-source\">Source:</dt>\n<dd class=\"tag-source\"><ul class=\"dummy\">\n<li>\n<a href=\"https://github.com/thlorenz/viralify/blob/master/index.js\">index.js</a>\n<span>, </span>\n<a href=\"https://github.com/thlorenz/viralify/blob/master/index.js#L61\">lineno 61</a>\n</li>\n</ul></dd>\n</dl>\n</dd>\n</dl>\n</article>\n</section>\n</div>\n\n*generated with [docme](https://github.com/thlorenz/docme)*\n</div>\n<!-- END docme generated API please keep comment here to allow auto update -->\n\n#### viralify.sync(root, packages, transform, front)\n\nSame as `viralify` but performed synchronously.\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/thlorenz/viralify/issues"
  },
  "_id": "viralify@0.4.2",
  "_from": "viralify@~0.4.1"
}
